package com.cdm.pages;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.aventstack.extentreports.ExtentTest;
import com.cdm.common.CommonActions;

public class EdgeGroupConfiguration extends CommonActions {

	public EdgeGroupConfiguration(WebDriver driver, ExtentTest logger) {
		super(driver, logger);
		PageFactory.initElements(driver, this);
	}
	
	@FindBy(xpath = "//input[@name ='devicename']")
	WebElement edgeDeployment;
	
	@FindBy(xpath = "//input[@name='appgroupname']")
	WebElement appGroupNameInputdeploy;

	@FindBy(xpath = "//label[@for='mat-checkbox-27-input']//span[@class='mat-checkbox-inner-container mat-checkbox-inner-container-no-side-margin']")
	// @FindBy(xpath = "(//tbody/tr[1]/td[1]/mat-checkbox[1])[2]//input")
	WebElement checkboxEdgeStepThreeName;

	@FindBy(xpath = "(//tbody/tr[1]/td[1]/mat-checkbox[1])[2]//label")
	WebElement selectedcheckboxEdgeStepThreeNameLabel;

	@FindBy(xpath = "(//tbody/tr[1]/td[1]/mat-checkbox[1])[1]//input")
	WebElement checkboxAppName;

	@FindBy(xpath = "(//tbody/tr[1]/td[1]/mat-checkbox[1])[2]//label")
	WebElement selectedCheckboxAppNameLabel;

	@FindBy(xpath = "(//tbody/tr[1]/td[1]/mat-checkbox[1])[2]//input")
	WebElement checkboxEdgeName;

	@FindBy(xpath = "(//tbody/tr[1]/td[1]/mat-checkbox[1])[2]//label")
	WebElement selectedCheckboxEdgeNameSacLabel;

	@FindBy(xpath = "//div[contains(text(),'App Group Name ')]/../../..//mat-icon")
	WebElement appGroupNameDot;

	@FindBy(xpath = "//div[contains(text(),'  EDGE ')]/../../..//mat-icon")
	WebElement edgeDot;

	@FindBy(xpath = "//div[contains(text(),' EDGE Group Name ')]/../../..//mat-icon")
	WebElement deployementEdgeGroupNameDot;


	@FindBy(xpath = "//body/app-root[1]/app-root[1]/app-home[1]/mat-sidenav-container[1]/mat-sidenav-content[1]/div[2]/div[1]/app-controller[1]/div[1]/div[1]/div[1]/img[5]")
	WebElement BulkAppDeploymentButton;

	@FindBy(xpath = "//h4/span[contains(text(),'Application Deployment')]")
	WebElement headingConfigurationTitle;
	
	@FindBy(css = ".tableCard h4")
	WebElement deployListpageVerification;
	
	@FindBy(xpath = "//div[contains(text(),'App Name')]/../../..//mat-icon")

	WebElement appNameDot;
	@FindBy(xpath = "(//button//span[contains(text(),'Next')])[1]/..")
	WebElement NextButton1;

	@FindBy(xpath = "(//button//span[contains(text(),'Next')])[2]/..")
	WebElement NextButton2;

	@FindBy(xpath = "(//button//span[contains(text(),'Next')])[3]/..")
	WebElement NextButton3;

	@FindBy(xpath = "(//button//span[contains(text(),'Next')])[4]/..")
	WebElement NextButton4;
	
	public void headingConfigurationTitleClick() {
		// clickElement(headingTitle, "Clicking on Title of heading");
		headingConfigurationTitle.click();
	}
	public void BulkAppDeploymentButton() {
		clickElement(BulkAppDeploymentButton, getScreenshot());
		ElementExist(BulkAppDeploymentButton, getScreenshot());

	}

	
	public String verifyDeployBreadcrumb() {
		String breadcrumb = deployListpageVerification.getText();
        return breadcrumb;
		
	}
	
	public void appNameDot() {
		appNameDot.click();
	}

	public void NextButtonStep1() {
		NextButton1.click();
	}

	public void NextButtonStep2() throws InterruptedException {
		NextButton2.click();
		Thread.sleep(3000);
	}

	public void NextButtonStep3() throws InterruptedException {
		NextButton3.click();
		Thread.sleep(3000);
	}
	public void NextButtonStep4() throws InterruptedException {
		NextButton4.click();
		Thread.sleep(3000);
	}

	public void appGroupNameDot() {
		JavascriptExecutor executor = (JavascriptExecutor) driver;
		executor.executeScript("arguments[0].click()", appGroupNameDot);

	}
	public void edgeDot() {
		edgeDot.click();
	}

	
	public void appGroupNameInputdeploy(String value) {
		appGroupNameInputdeploy.sendKeys(value);
	}

	
	public void appNameInput(String value) {
		appNameInput.sendKeys(value);
	}

	public void edgeDeployment(String value) {
		edgeDeployment.sendKeys(value);
	}

}
